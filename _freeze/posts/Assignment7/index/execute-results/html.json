{
  "hash": "f3c8bb7565e360d21ca14d9308b33f80",
  "result": {
    "markdown": "---\ntitle: \"Assignment 7\"\nauthor: \"Hemanth Allamaneni\"\ndate: \"2023-10-20\"\ncategories: [code, graphs]\n---\n\n\n### Data set used found at \"https://www2.imm.dtu.dk/pubdb/pubs/6010-full.html\"\n\n### Generate a scatter plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read the CSV file\ndata <- read.csv(\"AFINN-111.csv\")\n\n# Assuming the CSV file has columns named \"Word\" and \"Sentiment\"\n# Replace them with the actual column names in your CSV file\nword <- data$Word\nsentiment <- data$Sentiment\n\n# Generate a scatterplot\nplot(sentiment, main = \"Sentiment Scatterplot\", xlab = \"Word Index\", ylab = \"Sentiment\", col = \"blue\", pch = 16)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nIn this analysis, a CSV file containing sentiment data is processed in R to generate a scatterplot depicting the sentiment scores associated with different words. The file consists of two columns: \"Word,\" representing individual words, and \"Sentiment,\" indicating their corresponding sentiment scores as integers. The R script utilizes the base **`plot()`** function to create a scatterplot, with the x-axis representing the index of each word and the y-axis representing the associated sentiment score. Any missing or non-finite values are handled to ensure the accuracy of the plot. The resulting visualization provides an overview of the sentiment distribution across the words in the dataset, enabling a quick assessment of the sentiment patterns present in the data.\n\n### Generate a comparative scatter plot and bubble chart\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install and load the ggplot2 package\n# install.packages(\"ggplot2\")\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.3.2\n```\n:::\n\n```{.r .cell-code}\n# Read the CSV file\ndata <- read.csv(\"AFINN-111.csv\")\n\n# Create a new column for index\ndata$Index <- seq_along(data$Word)\n\n# Assuming the CSV file has columns named \"Index\", \"Word\", and \"Sentiment\"\n# Replace them with the actual column names in your CSV file\nindex <- data$Index\nword <- data$Word\nsentiment <- data$Sentiment\n\n# Remove rows with missing values\ndata <- na.omit(data)\n\n# Create a comparative scatter plot with index ranges on the x-axis\nggplot(data, aes(x = Index, y = Sentiment)) +\n  geom_point(aes(size = abs(Sentiment)), color = \"blue\", alpha = 0.7) +\n  scale_size_continuous(range = c(3, 10)) +\n  labs(title = \"Comparative Scatter Plot\", x = \"Index Range\", y = \"Sentiment\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Create a bubble chart with index ranges on the x-axis\nggplot(data, aes(x = Index, y = Sentiment, size = abs(Sentiment), color = Sentiment)) +\n  geom_point(alpha = 0.7) +\n  scale_size_continuous(range = c(3, 20)) +\n  labs(title = \"Bubble Chart\", x = \"Index Range\", y = \"Sentiment\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n:::\n\n\nThe provided R code utilizes the ggplot2 package to generate two distinct visualizations based on sentiment data extracted from a CSV file. The code begins by loading the necessary libraries and reading the data into a dataframe. A new index column is created to represent the row indices. Missing values are handled using the na.omit() function. The first visualization is a comparative scatter plot, where the x-axis displays index ranges, the y-axis represents sentiment scores, and point sizes correspond to the absolute values of sentiment scores. The second visualization is a bubble chart that maintains the same x and y-axis representations but introduces varying bubble sizes based on sentiment magnitude and color-coded sentiment scores. Both visualizations offer insights into the distribution and magnitude of sentiment scores across the dataset, providing a comprehensive exploration of sentiment trends with respect to index.\n\n### Generate a circular area chart\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install and load the ggplot2 package\ninstall.packages(\"ggplot2\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' is in use and will not be installed\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Read the CSV file\ndata <- read.csv(\"AFINN-111.csv\")\n\n# Assuming the CSV file has columns named \"Word\" and \"Sentiment\"\n# Replace them with the actual column names in your CSV file\nword <- data$Word\nsentiment <- data$Sentiment\n\n# Create a data frame for plotting\nplot_data <- data.frame(Word = word, Sentiment = sentiment)\n\n# Convert sentiment scores to positive values for line chart\nplot_data$Sentiment <- abs(plot_data$Sentiment)\n\n# Remove missing values\nplot_data <- na.omit(plot_data)\n\n# Sort the data by sentiment values\nplot_data <- plot_data[order(plot_data$Sentiment, decreasing = TRUE), ]\n\n# Create an index column for x-axis\nplot_data$Index <- seq_along(plot_data$Word)\n\n# Create a line chart with index on the x-axis\nggplot(plot_data, aes(x = Index, y = Sentiment, group = 1)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"Sentiment Across Data\", x = \"Index\", y = \"Sentiment\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nThe line chart depicts the sentiment values across the dataset, where each point on the x-axis corresponds to the index of a word in the dataset. The sentiment values, represented on the y-axis, are derived from the \"Sentiment\" column, with absolute values used for visualization clarity. The blue line traces the fluctuation in sentiment, illustrating how sentiments vary across different entries in the dataset. The ascending peaks and descending troughs indicate the intensity and direction of sentiment changes, offering a visual narrative of sentiment trends throughout the dataset. The index on the x-axis provides a sequential ordering of words, allowing for a straightforward interpretation of sentiment patterns across the dataset.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}